# i3 config file (v4)
#
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

set $left  h
set $down  j
set $up    k
set $right l

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below. ISO 10646 = Unicode
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
font -misc-fixed-medium-r-normal--10-*-*-*-*-*-iso10646-*
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, if you need a lot of unicode glyphs or
# right-to-left text rendering, you should instead use pango for rendering and
# chose a FreeType font, such as:
# font pango:DejaVu Sans Mono 10

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec i3-sensible-terminal

# kill focused window
bindsym $mod+Shift+c kill

# start dmenu (a program launcher)
bindsym $mod+p exec dmenu_run
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
bindsym $mod+Shift+p exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+$left  focus left
bindsym $mod+$down  focus down
bindsym $mod+$up    focus up
bindsym $mod+$right focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+$left  move left
bindsym $mod+Shift+$down  move down
bindsym $mod+Shift+$up    move up
bindsym $mod+Shift+$right move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# Resize focussed window:
bindsym $mod+Control+$left  resize shrink width 10 px or 10 ppt
bindsym $mod+Control+Left   resize shrink width 10 px or 10 ppt
bindsym $mod+Control+$down  resize grow height 10 px or 10 ppt
bindsym $mod+Control+Down   resize grow height 10 px or 10 ppt
bindsym $mod+Control+$up    resize shrink height 10 px or 10 ppt
bindsym $mod+Control+Up     resize shrink height 10 px or 10 ppt
bindsym $mod+Control+$right resize grow width 10 px or 10 ppt
bindsym $mod+Control+Right  resize grow width 10 px or 10 ppt

# split in horizontal orientation
# I might want to change this binding to vim style marks...
bindsym $mod+apostrophe split h
# split in vertical orientation
bindsym $mod+semicolon split v
# These feel more natural since they match the directional keys, but I want to
# use those key combinations for resizing:
# bindsym $mod+Control+$left  split h
# bindsym $mod+Control+$down  split v
# bindsym $mod+Control+$up    split v
# bindsym $mod+Control+$right split h

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+t layout tabbed
bindsym $mod+d layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
bindsym $mod+q focus child

# switch to workspace
bindsym $mod+1 workspace 1
bindsym $mod+2 workspace 2
bindsym $mod+3 workspace 3
bindsym $mod+4 workspace 4
bindsym $mod+5 workspace 5
bindsym $mod+6 workspace 6
bindsym $mod+7 workspace 7
bindsym $mod+8 workspace 8
bindsym $mod+9 workspace 9
bindsym $mod+0 workspace 10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace 1
bindsym $mod+Shift+2 move container to workspace 2
bindsym $mod+Shift+3 move container to workspace 3
bindsym $mod+Shift+4 move container to workspace 4
bindsym $mod+Shift+5 move container to workspace 5
bindsym $mod+Shift+6 move container to workspace 6
bindsym $mod+Shift+7 move container to workspace 7
bindsym $mod+Shift+8 move container to workspace 8
bindsym $mod+Shift+9 move container to workspace 9
bindsym $mod+Shift+0 move container to workspace 10

# reload the configuration file
bindsym $mod+Control+C exec --no-startup-id sh -c '$i3_regen_config && i3-msg reload'
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Control+R exec --no-startup-id sh -c '$i3_regen_config && i3-msg restart'
# exit i3 (logs you out of your X session)
bindsym $mod+Control+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym $left  resize shrink width 10 px or 10 ppt
        bindsym $down  resize grow height 10 px or 10 ppt
        bindsym $up    resize shrink height 10 px or 10 ppt
        bindsym $right resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+Shift+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
        status_command i3status -c ~/.i3/i3status-eee.conf
	# TODO: Music status, launching feedback, etc
}

# Ian's extras
# set $lock i3lock --dpms -i ~/.i3/lock-800x480.png
set $lock i3lock --dpms -t -i ~/.i3/lock-tiled.png

# i3 BUG FIXME: Variables within variables appear to be expanded to an empty string
# set $terminal i3-sensible-terminal -e
# set $vol_channel Master
# set $vol_delta 5
# set $mute_channel Master

set $browser           --no-startup-id notify-send -t 500 'Launching Browser...'; exec sensible-browser
set $email             i3-sensible-terminal -bg Black -fg White -e sup-mail
set $rss               i3-sensible-terminal -e canto
set $network_manager   i3-sensible-terminal -e wicd-curses
set $bluetooth_manager blueman-manager
set $chat              i3-sensible-terminal -bg Black -fg White -e finch
set $irc               i3-sensible-terminal -e irssi
set $python            i3-sensible-terminal -bg Black -fg White -e ipython
set $calc              i3-sensible-terminal -e calc
set $calendar          i3-sensible-terminal -e wyrd
set $voip              mumble
# TODO: Statusbar
set $music1            i3-sensible-terminal -e cmus
set $music2            i3-sensible-terminal -e mocp
# TODO: If pulseaudio is in use, use pavucontrol instead (+ if installed)
set $mixer             i3-sensible-terminal -e alsamixer

# TODO: Allow multiple channels to be synchronised (e.g. when subwoofers, dock
# or other unusual outputs do not slave off master or pcm in hardware)
# NOTE: Requres i3status >= v2.7
# TODO: There is still a slight delay from i3status - Maybe add some immediate
# feedback like I do in my wmii plugins.
# FIXME: This can make i3 somewhat unresponsive for a little while
# (unattributed high CPU usage) if the volume buttons are held down (too many
# execs I think). I should turn my wmii plugin into a daemon that grabs the
# keys itself
set $vol_down exec --no-startup-id amixer set Master 2-;     exec killall -SIGUSR1 i3status
set $vol_up   exec --no-startup-id amixer set Master 2+;     exec killall -SIGUSR1 i3status
set $vol_mute exec --no-startup-id amixer set Master toggle; exec killall -SIGUSR1 i3status

# TODO: Daemonise this for increased responsiveness & cmus mute needs to
# remember volume to unmute at
set $smart_vol_down exec --no-startup-id ~/.i3/i3companion/commands.py vol down
set $smart_vol_up   exec --no-startup-id ~/.i3/i3companion/commands.py vol up
set $smart_vol_mute exec --no-startup-id ~/.i3/i3companion/commands.py vol mute

set $music_prev  exec --no-startup-id ~/.i3/i3companion/commands.py music 'Previous Track'
set $music_play  exec --no-startup-id ~/.i3/i3companion/commands.py music 'Play'
set $music_pause exec --no-startup-id ~/.i3/i3companion/commands.py music 'Play/Pause'
set $music_stop  exec --no-startup-id ~/.i3/i3companion/commands.py music 'Stop'
set $music_next  exec --no-startup-id ~/.i3/i3companion/commands.py music 'Next Track'

# Alternate modes for opening terminals
set $term_large_font -fa Monospace -fs 24 # For viewing from across the room
set $term_bw         -bg Black -fg White  # Overrides colour scheme in .Xresources

workspace_layout  stacked
new_window        normal 1
new_float         normal 1
# hide_edge_borders both

# TODO: spawn xautolock
bindsym XF86ScreenSaver exec $lock
bindsym XF86Sleep       exec $lock
bindsym XF86Suspend     exec $lock
bindsym $mod+grave      exec $lock

bindsym XF86AudioLowerVolume      $smart_vol_down
bindsym $mod+XF86AudioLowerVolume $vol_down
bindsym $mod+bracketleft          $smart_vol_down
bindsym $mod+Control+bracketleft  $vol_down

bindsym XF86AudioRaiseVolume      $smart_vol_up
bindsym $mod+XF86AudioRaiseVolume $vol_up
bindsym $mod+bracketright         $smart_vol_up
bindsym $mod+Control+bracketright $vol_up

bindsym XF86AudioMute             $smart_vol_mute
bindsym $mod+XF86AudioMute        $vol_mute
bindsym $mod+backslash            $smart_vol_mute
bindsym $mod+Control+backslash    $vol_mute

bindsym $mod+XF86AudioPlay        exec $mixer
bindsym $mod+XF86AudioPause       exec $mixer
bindsym $mod+Shift+backslash      exec $mixer

# TODO: Allow the XF86Audio* grabs to be released to allow applications that
# want to grab them directly can do so
# TODO: bindsym $mod+Control+XF86AudioPlay  toggle_audio_grab()
# TODO: bindsym $mod+Control+XF86AudioPause toggle_audio_grab()
# TODO: bindsym $mod+Control+XF86AudioMute  toggle_volume_grab()

bindsym XF86Calculator exec $calc
bindsym XF86HomePage   exec $browser
bindsym XF86Mail       exec $email
bindsym XF86Eject      exec --no-startup-id eject
# TODO: bindsym XF86TouchpadToggle       toggle_input_device('trackpad')
# TODO: bindsym Shift-XF86TouchpadToggle toggle_input_device('trackpoint')
bindsym XF86AudioPrev  $music_prev
bindsym XF86AudioPlay  $music_pause
bindsym XF86AudioPause $music_pause
bindsym XF86AudioStop  $music_stop
bindsym XF86AudioNext  $music_next

bindsym $mod+Shift+Return         exec i3-sensible-terminal $term_large_font
bindsym $mod+Control+Return       exec i3-sensible-terminal $term_bw
bindsym $mod+Control+Shift+Return exec i3-sensible-terminal $term_large_font $term_bw

bindsym $mod+w         exec $browser
bindsym $mod+e         exec $email
bindsym $mod+r         exec $rss
bindsym $mod+y         exec $python
bindsym $mod+u         exec $music1
bindsym $mod+i         exec $irc
bindsym $mod+o         exec $music2
bindsym $mod+Shift+a   exec $chat
bindsym $mod+g         exec $calendar
bindsym $mod+z         $music_prev
bindsym $mod+x         $music_play
bindsym $mod+c         $music_pause
bindsym $mod+v         $music_stop
bindsym $mod+Shift+v   exec $voip
bindsym $mod+b         $music_next
bindsym $mod+Shift+b   exec $bluetooth_manager
bindsym $mod+n         exec $network_manager
# bindsym $mod+comma  used by dunst!
# bindsym $mod+period used by dunst!
bindsym $mod+slash     exec $calc

# Last workspace (like vim's ctrl+6 edit alternate file)
bindsym $mod+Control+6 workspace back_and_forth
bindsym $mod+Control+Shift+6 move container to workspace back_and_forth

# -key, -mod and -history_key seem to be ignored from the command line. They
# are set in ~/.config/dunstrc (besides which, exclusively doing it here is
# racey since dunst can be automatically started by dbus)
# exec --no-startup-id dunst -fn "$font" -geometry +0-0 -mod $mod -key period -history_key comma
exec --no-startup-id dunst

# Misc TODO:
# - actions
#   - find_window
#   - recover window (unsure if I still need it)
# - Key to DPMS screen to standby/off now
# - Toggle DPMS and screensaver
# - xautolock [ -toggle ]
# - port wmii plugins, or turn into standalone scripts
#   - music, cmus, moc, spotify
#   - xdg autostart
#   - xsetwacom
#   - display & presentation
#   - libpurple & irssi notifications (probably can just use an existing libnotify plugin)
# - machine specific settings (source? precompile?)
# - caps, num & scroll lock indicators
# - vim style mark and goto mod+m, mod+'
